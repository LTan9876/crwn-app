{"ast":null,"code":"var _jsxFileName = \"/Users/lilytan/Documents/personalprojects/crwn-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignOutPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props; //method in firebase auth library\n    //open msg system between app and firebase, sends msg if user has updated\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = createUserProfileDocument(userAuth); //from the documentRef obj, allows to check if doc exists because of .exist property\n        //can get other properties on object with .data() method, returns JSON obj of document\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      } //if userAuth is null, set currentUser to userAuth,\n      //same null value\n\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    //close open connection to prevent memory leaks\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 83\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignOutPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 108\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  currentUser: user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/lilytan/Documents/personalprojects/crwn-app/src/App.js"],"names":["React","HomePage","ShopPage","Header","SignInAndSignOutPage","Route","Switch","Redirect","auth","createUserProfileDocument","connect","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","currentUser","id","data","componentWillUnmount","render","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,oBAAP,MAAiC,2DAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAGA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACJ,MAAAA;AAAD,QAAmB,KAAKK,KAA9B,CADkB,CAElB;AACA;;AACA,SAAKF,mBAAL,GAA2BN,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAGV,yBAAyB,CAACS,QAAD,CAAzC,CADY,CAGZ;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7BV,UAAAA,cAAc,CAAC;AACbW,YAAAA,WAAW,EAAE;AACXC,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AAEX,iBAAGF,QAAQ,CAACG,IAAT;AAFQ;AADA,WAAD,CAAd;AAMD,SAPD;AAQD,OAdkE,CAenE;AACA;;;AACAb,MAAAA,cAAc,CAACO,QAAD,CAAd;AACD,KAlB0B,CAA3B;AAmBD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKX,mBAAL;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAApB;AAAwB,MAAA,SAAS,EAAIzB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,OAApB;AAA4B,MAAA,SAAS,EAAIC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,SAApB;AAA8B,MAAA,MAAM,EAAI,MAAM,KAAKc,KAAL,CAAWM,WAAX,gBAA0B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,gBAAmD,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAHF,CADF;AAWD;;AA9C+B;;AAiDlC,MAAMK,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAa;AACnCN,EAAAA,WAAW,EAAEM,IAAI,CAACN;AADiB,CAAb,CAAxB;;AAIA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,cAAc,EAAEiB,IAAI,IAAIE,QAAQ,CAACnB,cAAc,CAACiB,IAAD,CAAf;AADQ,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component'\nimport Header from './components/header/header.component'\nimport SignInAndSignOutPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\nimport { connect } from 'react-redux'\nimport { setCurrentUser } from './redux/user/user.actions'\n\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null\n\n  componentDidMount() {\n    const {setCurrentUser} = this.props\n    //method in firebase auth library\n    //open msg system between app and firebase, sends msg if user has updated\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = createUserProfileDocument(userAuth)\n\n        //from the documentRef obj, allows to check if doc exists because of .exist property\n        //can get other properties on object with .data() method, returns JSON obj of document\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          })\n        })\n      }\n      //if userAuth is null, set currentUser to userAuth,\n      //same null value\n      setCurrentUser(userAuth)\n    })\n  }\n\n  componentWillUnmount() {\n    //close open connection to prevent memory leaks\n    this.unsubscribeFromAuth()\n  }\n\n  render() {\n    return (\n      <div>\n        {/* passed in state so header component is aware if user is signed in or out */}\n        <Header/>\n        <Switch>\n          <Route exact path = '/' component = {HomePage} />\n          <Route exact path = '/shop' component = {ShopPage} />\n          <Route exact path = '/signin' render = {() => this.props.currentUser ? (<Redirect to= '/' />) : (<SignInAndSignOutPage/>)} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({user}) => ({\n  currentUser: user.currentUser\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}